[{"C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\Footer\\Footer.js":"1","C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\Summary\\Summary.js":"2","C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\CovidMap\\CovidMap.js":"3","C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\Provinces\\Provinces.js":"4","C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\index.js":"5","C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\Api\\Api.js":"6","C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\Nav\\Nav.js":"7","C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Containers\\Table\\Table.js":"8"},{"size":150,"mtime":1606893100126,"results":"9","hashOfConfig":"10"},{"size":6305,"mtime":1607243338578,"results":"11","hashOfConfig":"10"},{"size":1547,"mtime":1606848650748,"results":"12","hashOfConfig":"10"},{"size":1033,"mtime":1607107427841,"results":"13","hashOfConfig":"10"},{"size":542,"mtime":1606810566266,"results":"14","hashOfConfig":"10"},{"size":974,"mtime":1607055971823,"results":"15","hashOfConfig":"10"},{"size":1499,"mtime":1606948896321,"results":"16","hashOfConfig":"10"},{"size":2658,"mtime":1607249559960,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fl925h",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\Footer\\Footer.js",[],"C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\Summary\\Summary.js",["38"],"import React, {useState, useEffect} from 'react'\r\nimport {instance, provinces} from '../Api/Api'\r\nimport CovidMap from '../CovidMap/CovidMap'\r\nimport TotalChart from '../../Containers/Charts/TotalChart'\r\nimport DailyChart from '../../Containers/Charts/DailyChart'\r\nimport DoughChart from '../../Containers/Charts/DoughChart'\r\nimport Table from '../../Containers/Table/Table'\r\n\r\n\r\nfunction Summary() {\r\n    //state for summary\r\n    const [data,setData] = useState({})\r\n    const [date,setDate] = useState('')\r\n    //state for provincial reports\r\n    const [report, setReport] = useState([])\r\n    //state for tables, doughchart and maps\r\n    const [provinceData, setProvinceData] = useState([])\r\n    const [basicData, setBasicData] =useState([])\r\n\r\n    const fetchData = async ()=>{\r\n        //api call to get the main data\r\n        const response = await instance.get('/summary')\r\n            .catch(err=>console.log(`summary error: ${err}`))\r\n\r\n        //api call to get the data for all the line graphs\r\n        const res = await instance.get(`/reports`)\r\n            .catch(err=>console.log(`reports error: ${err}`))\r\n\r\n        //api call to get the data for the doughnut graph, map data and table\r\n        //provinceURL goes over all the province array and give a promise containing urls for each province\r\n        const provinceURL = provinces.map(p => instance.get(`/reports/province/${p.Code}`))\r\n        \r\n        //resp resolves the promise and gives the array data for each province\r\n        const resp = await Promise.all(provinceURL)\r\n            .catch(err=>console.log(`province data error: ${err}`))\r\n\r\n        setBasicData(resp)\r\n\r\n        // const albertaData = resp[0].data.data\r\n        // console.log(albertaData);\r\n\r\n        // if(!resp){\r\n        //     return null\r\n        // } else {\r\n\r\n            for (let i = 0; i < resp.length; i++) {\r\n                const provData = resp[i].data.data;\r\n                const provName = resp[i].data.province\r\n                \r\n                // console.log(provName , provData);\r\n\r\n\r\n                setProvinceData(provData)\r\n\r\n            }\r\n        // }\r\n\r\n        \r\n        // resp.forEach(i=>{\r\n        //     const provData = resp[i].data.data;\r\n        //     const provName = resp[i].data.province\r\n        //     console.log(provName);\r\n        //     console.log(provData);\r\n        // })\r\n\r\n\r\n        setReport(res.data.data)\r\n        setData(response.data.data[0])\r\n        setDate(response.data.last_updated)\r\n\r\n        return { response, res, resp}\r\n    }\r\n\r\n    useEffect (()=>{\r\n        fetchData()\r\n    },[])\r\n\r\n  \r\n    \r\n    return (\r\n        data && report && date && provinceData &&\r\n            <div>\r\n                <h3>Last updated: {date}</h3>\r\n                <p>Total Cases: {data.total_cases} <span>⬆️ {data.change_cases}</span></p>\r\n                <p>Total Critical Cases:{data.total_criticals} <span>⬆️ {data.change_criticals}</span></p>\r\n                <p>Total Recoveries: {data.total_recoveries} <span>⬆️ {data.change_recoveries}</span></p>\r\n                <p>Total Fatalities: {data.total_fatalities} <span>⬆️ {data.change_fatalities}</span></p>\r\n                <CovidMap/>\r\n                <TotalChart report={report}/>\r\n                <DailyChart report={report}/>\r\n                <DoughChart/>\r\n                <Table provinces={provinces} data={provinceData} basicData={basicData}/>\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Summary\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// function Summary() {\r\n//     const [data,setData] = useState([])\r\n//     const [date,setDate] = useState('')\r\n\r\n//     const fetchData = async ()=>{\r\n//         const response = await reportInstance.get('/reports')\r\n//         const dataArray = await response.data.data\r\n\r\n\r\n\r\n//         // instance.get('/summary')\r\n//         //     .then(res=> setData(res.data.data))\r\n//         //     .catch(err=>console.log(err))\r\n\r\n//         setData(dataArray)\r\n//         setDate(response.data.date)\r\n\r\n//     }\r\n\r\n//     useEffect (()=>{\r\n//         fetchData()\r\n//     },[])\r\n\r\n//     console.log(data);\r\n\r\n//     const latestReport = data[data.length - 1]\r\n\r\n//     console.log(latestReport);\r\n\r\n//     if(latestReport === null || undefined) return null \r\n\r\n//     return (\r\n//        'hi'\r\n//     )\r\n// }\r\n\r\n\r\n// export default Summary\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// function Summary() {\r\n//     const [date,setDate] = useState('')\r\n//     const [totalCases,setTotalCases] = useState('')\r\n//     const [totalCriticals, setTotalCriticals] = useState('')\r\n//     const [totalFatalities, setTotalFatalities] = useState('')\r\n//     const [totalRecoveries, setTotalRecoveries] = useState('')\r\n\r\n//     const [changeCases, setChangeCases] = useState('')\r\n//     const [changeCriticals, setChangeCriticals] = useState('')\r\n//     const [changeFatalities, setChangeFatalities] = useState('')\r\n//     const [changeRecoveries, setChangeRecoveries] = useState('')\r\n\r\n\r\n//     useEffect (()=>{\r\n//         const fetchData = async ()=>{\r\n//             const response = await instance.get('/summary')\r\n//             const dataArray = response.data.data\r\n\r\n//             setDate(response.data.last_updated)\r\n//             setTotalCases(dataArray[0].total_cases)\r\n//             setTotalCriticals(dataArray[0].total_criticals)\r\n//             setTotalFatalities(dataArray[0].total_fatalities)\r\n//             setTotalRecoveries(dataArray[0].total_recoveries)\r\n\r\n//             setChangeCases(dataArray[0].change_cases)\r\n//             setChangeCriticals(dataArray[0].change_criticals)\r\n//             setChangeFatalities(dataArray[0].change_fatalities)\r\n//             setChangeRecoveries(dataArray[0].change_recoveries)\r\n//         }\r\n    \r\n//         fetchData()\r\n//     },[])\r\n\r\n  \r\n//     return (\r\n//        <div>\r\n//             <p>Last updated: {date}</p>\r\n//             <p>Total Cases: {totalCases} <span>⬆️ {changeCases}</span></p>\r\n//             <p>Total Critical Cases: {totalCriticals} <span>⬆️ {changeCriticals}</span></p>\r\n//             <p>Total Recoveries: {totalRecoveries} <span>⬆️ {changeRecoveries}</span></p>\r\n//             <p>Total Fatalities: {totalFatalities} <span>⬆️ {changeFatalities}</span></p>\r\n//             <CovidMap/>\r\n//        </div>\r\n//     )\r\n// }\r\n\r\n","C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\CovidMap\\CovidMap.js",[],"C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\Provinces\\Provinces.js",[],"C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\index.js",[],["39","40"],"C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\Api\\Api.js",[],["41","42"],"C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\Nav\\Nav.js",["43","44","45"],"import { imageOverlay } from 'leaflet'\r\nimport React, {useState} from 'react'\r\nimport { Menu, Dropdown, MenuItem} from 'semantic-ui-react'\r\nimport './nav.css'\r\nimport {Link} from 'react-router-dom'\r\n// import {provinces} from '../Api/Api'\r\n\r\nfunction Nav({provinces}) {\r\n\r\n    const [data] = useState(provinces)\r\n\r\n    // const [value, setValue] = useState('')\r\n\r\n    const dropdownOptions = provinces.map((province)=>({\r\n        key: province.Code,\r\n        text: province.Name,\r\n        value: province.Code\r\n    }))\r\n\r\n\r\n    return (\r\n        <Menu>\r\n            <Menu.Item>\r\n                <Link to='/'> \r\n                    <i class=\"fas fa-shield-virus\" style={{fontSize:'3rem'}}></i> \r\n                </Link>         \r\n            </Menu.Item>\r\n\r\n            \r\n           \r\n                <Dropdown  placeholder=\"Select Province\" className='link item' style={{paddingRight:\"5rem\"}}>\r\n                    <Dropdown.Menu>\r\n                    {data.map(province=>{\r\n                        return (\r\n                            <Dropdown.Item  key={province.Code} value={province.Code}>\r\n                                <Link to={`/province/${province.Code}`}>\r\n                                    <p>{province.Name}</p>\r\n                                </Link>\r\n                            </Dropdown.Item>\r\n                        )\r\n                    })}\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n           \r\n      </Menu>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n\r\n","C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Containers\\Table\\Table.js",["46","47"],{"ruleId":"48","severity":1,"message":"49","line":48,"column":23,"nodeType":"50","messageId":"51","endLine":48,"endColumn":31},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"52","replacedBy":"56"},{"ruleId":"54","replacedBy":"57"},{"ruleId":"48","severity":1,"message":"58","line":1,"column":10,"nodeType":"50","messageId":"51","endLine":1,"endColumn":22},{"ruleId":"48","severity":1,"message":"59","line":3,"column":26,"nodeType":"50","messageId":"51","endLine":3,"endColumn":34},{"ruleId":"48","severity":1,"message":"60","line":14,"column":11,"nodeType":"50","messageId":"51","endLine":14,"endColumn":26},{"ruleId":"48","severity":1,"message":"61","line":4,"column":11,"nodeType":"50","messageId":"51","endLine":4,"endColumn":21},{"ruleId":"48","severity":1,"message":"62","line":4,"column":22,"nodeType":"50","messageId":"51","endLine":4,"endColumn":35},"no-unused-vars","'provName' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["63"],"no-negated-in-lhs",["64"],["63"],["64"],"'imageOverlay' is defined but never used.","'MenuItem' is defined but never used.","'dropdownOptions' is assigned a value but never used.","'latestData' is assigned a value but never used.","'setLatestData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]