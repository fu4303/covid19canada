[{"C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\App.js":"1","C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\index.js":"2","C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\Provinces\\Provinces.js":"3","C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\Summary\\Summary.js":"4","C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\Regions\\Regions.js":"5","C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\Api\\Api.js":"6","C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\Nav\\Nav.js":"7","C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\Header\\Header.js":"8","C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\Footer\\Footer.js":"9","C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Containers\\Charts\\RegionsChart.js":"10","C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Containers\\RegionsDropdown\\RegionsDropdown.js":"11","C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Containers\\Charts\\DailyChart.js":"12","C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Containers\\Table\\Table.js":"13","C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Containers\\Charts\\TotalChart.js":"14","C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\SrollToTop.js":"15","C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\CovidMap\\CovidMap.js":"16","C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\UpdateDate\\UpdateDate.js":"17"},{"size":1204,"mtime":1614659740375,"results":"18","hashOfConfig":"19"},{"size":543,"mtime":1609312516565,"results":"20","hashOfConfig":"19"},{"size":1690,"mtime":1614671573870,"results":"21","hashOfConfig":"19"},{"size":4169,"mtime":1614671916858,"results":"22","hashOfConfig":"19"},{"size":1415,"mtime":1609355457579,"results":"23","hashOfConfig":"19"},{"size":17586,"mtime":1614621455321,"results":"24","hashOfConfig":"19"},{"size":1384,"mtime":1614663653333,"results":"25","hashOfConfig":"19"},{"size":3519,"mtime":1614671763854,"results":"26","hashOfConfig":"19"},{"size":1314,"mtime":1607543174921,"results":"27","hashOfConfig":"28"},{"size":8013,"mtime":1614627047078,"results":"29","hashOfConfig":"19"},{"size":1934,"mtime":1614669618362,"results":"30","hashOfConfig":"19"},{"size":4045,"mtime":1614663214603,"results":"31","hashOfConfig":"19"},{"size":4541,"mtime":1614671036081,"results":"32","hashOfConfig":"19"},{"size":4020,"mtime":1614663210391,"results":"33","hashOfConfig":"19"},{"size":258,"mtime":1609370062428,"results":"34","hashOfConfig":"28"},{"size":3220,"mtime":1614663988863,"results":"35","hashOfConfig":"19"},{"size":1042,"mtime":1614669291856,"results":"36","hashOfConfig":"19"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"48nrmu",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1fl925h",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\App.js",[],"C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\index.js",[],"C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\Provinces\\Provinces.js",[],"C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\Summary\\Summary.js",["73","74","75"],"import React, { useState, useEffect } from \"react\";\r\nimport { instance, provinces } from \"../Api/Api\";\r\nimport CovidMap from \"../CovidMap/CovidMap\";\r\nimport TotalChart from \"../../Containers/Charts/TotalChart\";\r\nimport DailyChart from \"../../Containers/Charts/DailyChart\";\r\nimport RegionsChart from \"../../Containers/Charts/RegionsChart\";\r\nimport Table from \"../../Containers/Table/Table\";\r\nimport Header from \"../Header/Header\";\r\nimport UpdateDate from \"../UpdateDate/UpdateDate\";\r\n\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\nfunction Summary() {\r\n  //state for summary\r\n  const [summaryInfo, setSummaryInfo] = useState(null);\r\n  const [loadingSummaryInfo, setLoadingSummaryInfo] = useState(true);\r\n\r\n  //state for provincial reports\r\n  const [reportInfo, setReportInfo] = useState(null);\r\n  const [loadingReportInfo, setLoadingReportInfo] = useState(true);\r\n\r\n  //state for tables, graphs and maps\r\n  const [basicData, setBasicData] = useState([]);\r\n  const [loadingBasicData, setLoadingBasicData] = useState(true);\r\n\r\n  //api call to get the summary data\r\n  const fetchMain = async () => {\r\n    try {\r\n      const response = await instance.get(\"/summary\");\r\n      setSummaryInfo(response);\r\n      setLoadingSummaryInfo(false);\r\n    } catch (error) {\r\n      console.error(\"summary error\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMain();\r\n    return () => {\r\n      fetchMain();\r\n    };\r\n  }, []);\r\n\r\n  //api call to get the report data all the line graphs\r\n  const fetchReport = async () => {\r\n    try {\r\n      const response = await instance.get(\"/reports\");\r\n      setReportInfo(response);\r\n      setLoadingReportInfo(false);\r\n    } catch (error) {\r\n      console.error(\"report error\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchReport();\r\n    return () => {\r\n      fetchReport();\r\n    };\r\n  }, []);\r\n\r\n  const fetchProvcincialData = async () => {\r\n    try {\r\n      //api call to get the data for the regions graph, map data and table\r\n      //provinceURL goes over all the province array and give a promise containing urls for each province\r\n      const provinceURL = provinces.map((p) =>\r\n        instance.get(`/reports/province/${p.Code}`)\r\n      );\r\n      //resp resolves the promise and gives the array data for each province\r\n      const resp = await Promise.all(provinceURL);\r\n      setBasicData(resp);\r\n      setLoadingBasicData(false);\r\n    } catch (error) {\r\n      console.log(`province data error: ${error}`);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProvcincialData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1\r\n        className=\"province__title\"\r\n        style={{\r\n          fontSize: \"2.5rem\",\r\n          marginTop: \"5.5rem\",\r\n          padding: \"0.75rem 0 0\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        COVID-19 Data for Canada\r\n      </h1>\r\n\r\n      {!summaryInfo ? (\r\n        <Dimmer active>\r\n          <Loader content=\"Loading\" />\r\n        </Dimmer>\r\n      ) : (\r\n        <>\r\n          <Header data={summaryInfo?.data?.data[0]} />\r\n          <UpdateDate date={summaryInfo?.data?.last_updated} />\r\n        </>\r\n      )}\r\n      {!reportInfo && !basicData ? (\r\n        <Dimmer active>\r\n          <Loader content=\"Loading\" />\r\n        </Dimmer>\r\n      ) : (\r\n        <>\r\n          <div className=\"ui four column centered stackable grid container item__size\">\r\n            <TotalChart className=\"column\" report={reportInfo?.data?.data} />\r\n\r\n            <DailyChart className=\"column\" report={reportInfo?.data?.data} />\r\n          </div>\r\n          <div className=\"ui four column centered stackable grid container item__size\">\r\n            <RegionsChart className=\"column\" basicData={basicData} />\r\n            <CovidMap\r\n              className=\"column\"\r\n              basicData={basicData}\r\n              provinces={provinces}\r\n            />\r\n          </div>\r\n          <div className=\"ui four column centered stackable grid container item__size\">\r\n            <Table\r\n              basicData={basicData}\r\n              provinces={provinces}\r\n              className=\"column\"\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Summary;\r\n","C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\Regions\\Regions.js",[],"C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\Api\\Api.js",[],"C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\Nav\\Nav.js",[],"C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\Header\\Header.js",[],"C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\Footer\\Footer.js",[],["76","77"],"C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Containers\\Charts\\RegionsChart.js",[],"C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Containers\\RegionsDropdown\\RegionsDropdown.js",[],"C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Containers\\Charts\\DailyChart.js",[],"C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Containers\\Table\\Table.js",[],"C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Containers\\Charts\\TotalChart.js",[],"C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\SrollToTop.js",[],"C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\CovidMap\\CovidMap.js",[],"C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\UpdateDate\\UpdateDate.js",[],{"ruleId":"78","severity":1,"message":"79","line":16,"column":10,"nodeType":"80","messageId":"81","endLine":16,"endColumn":28},{"ruleId":"78","severity":1,"message":"82","line":20,"column":10,"nodeType":"80","messageId":"81","endLine":20,"endColumn":27},{"ruleId":"78","severity":1,"message":"83","line":24,"column":10,"nodeType":"80","messageId":"81","endLine":24,"endColumn":26},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},"no-unused-vars","'loadingSummaryInfo' is assigned a value but never used.","Identifier","unusedVar","'loadingReportInfo' is assigned a value but never used.","'loadingBasicData' is assigned a value but never used.","no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-global-assign","no-unsafe-negation"]