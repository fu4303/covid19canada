[{"C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\Footer\\Footer.js":"1","C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\Summary\\Summary.js":"2","C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\CovidMap\\CovidMap.js":"3","C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\Provinces\\Provinces.js":"4","C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\index.js":"5","C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\Api\\Api.js":"6","C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\Nav\\Nav.js":"7","C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Containers\\Table\\Table.js":"8","C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Containers\\Charts\\DailyChart.js":"9","C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Containers\\Charts\\DoughChart.js":"10","C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\Header\\Header.js":"11"},{"size":1580,"mtime":1607410267382,"results":"12","hashOfConfig":"13"},{"size":2406,"mtime":1607455639035,"results":"14","hashOfConfig":"13"},{"size":3341,"mtime":1607461159427,"results":"15","hashOfConfig":"13"},{"size":934,"mtime":1607407628327,"results":"16","hashOfConfig":"13"},{"size":542,"mtime":1606810566266,"results":"17","hashOfConfig":"13"},{"size":1580,"mtime":1607458289809,"results":"18","hashOfConfig":"13"},{"size":1499,"mtime":1606948896321,"results":"19","hashOfConfig":"13"},{"size":1941,"mtime":1607455630236,"results":"20","hashOfConfig":"13"},{"size":3594,"mtime":1607282407008,"results":"21","hashOfConfig":"13"},{"size":3202,"mtime":1607413505003,"results":"22","hashOfConfig":"13"},{"size":2717,"mtime":1607409500822,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fl925h",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":1,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\Footer\\Footer.js",[],"C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\Summary\\Summary.js",[],"C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\CovidMap\\CovidMap.js",["52","53","54","55","56","57","58","59","60","61"],"import React from \"react\";\r\nimport {\r\n  Popup,\r\n  TileLayer,\r\n  MapContainer,\r\n  Marker,\r\n  GeoJSON,\r\n  CircleMarker,\r\n  Tooltip,\r\n} from \"react-leaflet\";\r\nimport { Icon } from \"leaflet\";\r\nimport canadaData from \"../../Data/newCanada.geo.json\";\r\nimport \"./covid-map.css\";\r\n\r\n// <GeoJSON\r\n// style={canadaStyle}\r\n// data={canadaData.features}\r\n// onEachFeature={onEachProvince}\r\n// />\r\n\r\nfunction CovidMap({ basicData, provinces }) {\r\n  //get the data array from the main object\r\n  const lData = basicData.map((e) => e.data.data);\r\n\r\n  //get the latest cases from the last array\r\n  let lastData = lData.map((e) => e[e.length - 1]);\r\n\r\n  //looped over all the object of lastData array and added name and coordinates of each province.\r\n  for (let i = 0; i < lastData.length; i++) {\r\n    lastData[i].name = provinces[i].Name;\r\n    lastData[i].coordinates = provinces[i].coordinates;\r\n  }\r\n\r\n  console.log(lastData);\r\n\r\n  const canadaStyle = {\r\n    color: \"#141414\",\r\n    weight: 1,\r\n    fillColor: \"purple\",\r\n    fillOpacity: 0.3,\r\n  };\r\n\r\n  const onEachProvince = (province, layer) => {\r\n    const provinceName = province.properties.NAME;\r\n    layer.bindPopup(provinceName);\r\n\r\n    layer.on({\r\n      mouseover: (event) => {\r\n        layer.openTooltip();\r\n        event.target.setStyle({\r\n          fillColor: \"yellow\",\r\n        });\r\n      },\r\n      mouseout: (event) => {\r\n        layer.closeTooltip();\r\n        event.target.setStyle({\r\n          fillColor: \"purple\",\r\n        });\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <MapContainer\r\n        center={[59.933, -101.821377]}\r\n        zoom={3.5}\r\n        scrollWheelZoom={true}\r\n      >\r\n        <TileLayer url=\"https://api.mapbox.com/styles/v1/cg709/cki6bfur32hye19o47s7r367b/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiY2c3MDkiLCJhIjoiY2tpNW05YThmMWozbjJ0bno0MGV6MW9reCJ9.7_QzeN9el8dzcDrUg-FURw\" />\r\n\r\n        {lastData.map((p) => {\r\n          return (\r\n            <CircleMarker\r\n              center={[p.coordinates[0], p.coordinates[1]]}\r\n              radius={8 * Math.log(p.total_cases / 10)}\r\n              fillOpacity={0.3}\r\n              stroke={false}\r\n              color=\"red\"\r\n              weight=\"3\"\r\n              onMouseOver={(e) => e.target.setStyle({ fillColor: \"green\" })}\r\n              onMouseOut={(e) => e.target.setStyle({ fillColor: \"blue\" })}\r\n            >\r\n              <Tooltip direction=\"bottom\" offset={[-8, -2]} opacity={1}>\r\n                <span>\r\n                  {p.Name + \": \" + \"Population\" + \" \" + city[\"population\"]}\r\n                </span>\r\n              </Tooltip>\r\n            </CircleMarker>\r\n          );\r\n        })}\r\n      </MapContainer>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default CovidMap;\r\n\r\n// <TileLayer url=\"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n\r\n// <Marker position={[56.130367, -106.346771]}>\r\n//           <Popup>\r\n//             A pretty CSS3 popup. <br /> Easily customizable.\r\n//           </Popup>\r\n//         </Marker>\r\n\r\n//         <Marker position={[53.933270, -116.576508]}>\r\n//           <Popup>\r\n//             A pretty CSS3 popup. <br /> Easily customizable.\r\n//           </Popup>\r\n//         </Marker>\r\n\r\n// <TileLayer\r\n// attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a>'\r\n// url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n// />;\r\n","C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\Provinces\\Provinces.js",[],"C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\index.js",[],["62","63"],"C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\Api\\Api.js",[],"C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\Nav\\Nav.js",["64","65","66"],"import { imageOverlay } from 'leaflet'\r\nimport React, {useState} from 'react'\r\nimport { Menu, Dropdown, MenuItem} from 'semantic-ui-react'\r\nimport './nav.css'\r\nimport {Link} from 'react-router-dom'\r\n// import {provinces} from '../Api/Api'\r\n\r\nfunction Nav({provinces}) {\r\n\r\n    const [data] = useState(provinces)\r\n\r\n    // const [value, setValue] = useState('')\r\n\r\n    const dropdownOptions = provinces.map((province)=>({\r\n        key: province.Code,\r\n        text: province.Name,\r\n        value: province.Code\r\n    }))\r\n\r\n\r\n    return (\r\n        <Menu>\r\n            <Menu.Item>\r\n                <Link to='/'> \r\n                    <i class=\"fas fa-shield-virus\" style={{fontSize:'3rem'}}></i> \r\n                </Link>         \r\n            </Menu.Item>\r\n\r\n            \r\n           \r\n                <Dropdown  placeholder=\"Select Province\" className='link item' style={{paddingRight:\"5rem\"}}>\r\n                    <Dropdown.Menu>\r\n                    {data.map(province=>{\r\n                        return (\r\n                            <Dropdown.Item  key={province.Code} value={province.Code}>\r\n                                <Link to={`/province/${province.Code}`}>\r\n                                    <p>{province.Name}</p>\r\n                                </Link>\r\n                            </Dropdown.Item>\r\n                        )\r\n                    })}\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n           \r\n      </Menu>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n\r\n",["67","68"],"C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Containers\\Table\\Table.js",["69"],"C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Containers\\Charts\\DailyChart.js",[],"C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Containers\\Charts\\DoughChart.js",["70"],"import React from 'react'\r\nimport { Doughnut} from 'react-chartjs-2';\r\nimport { provinces} from '../../Components/Api/Api'\r\n\r\nfunction DoughChart({basicData}) {\r\n\r\n      //get the data array from the main object\r\n      const lData = basicData.map((e)=>e.data.data) \r\n\r\n      //get the latest cases from the last array\r\n      let lastData = lData.map((e)=>e[e.length -1])\r\n  \r\n      //add name of the provinces to every lastData object, so it's easier to map\r\n      const newData = lastData.map((e,i)=>e['name'] = (provinces[i].Name))\r\n\r\n      // const compare = (a,b)=>{\r\n      //   const totalA = a.total_cases\r\n      //   const totalB = b.total_cases\r\n\r\n      //   let comparison = 0;\r\n      //   if (totalA > totalB) {\r\n      //     comparison = 1;\r\n      //   } else if (totalA < totalB) {\r\n      //     comparison = -1;\r\n      //   }\r\n      //   return comparison;\r\n      // }\r\n\r\n\r\n\r\n      \r\n      // const compare = (a,b)=>{\r\n      //   if (a > b) return -1;\r\n      //   if (b > a) return 1;\r\n\r\n      //   return 0;\r\n      // }\r\n\r\n      const total = lastData.map(data=>data.total_cases)\r\n      const names= lastData.map(data=>data.name)\r\n\r\n    return (\r\n        <div>\r\n            <Doughnut \r\n            \r\n            data={{\r\n                labels: names,\r\n                datasets: [\r\n                  {\r\n                    label: 'Cases',\r\n                    data: total,\r\n                    backgroundColor: [\r\n                      'rgba(255, 99, 132, 0.4)',\r\n                      'rgba(68, 162, 23, 0.4)',\r\n                      'rgba(255, 206, 86, 0.4)',\r\n                      'rgba(75, 192, 192, 0.4)',\r\n                      'rgba(153, 102, 255, 0.4)',\r\n                      'rgba(255, 159, 64, 0.4)',\r\n                      \"rgba(128, 0, 0, 0.4)\",\r\n                      \"rgba(0, 0, 128, 0.4)\",\r\n                      \"rgba(170, 110, 40, 0.4)\",\r\n                      \"rgba(136, 128, 128, 0.4)\",\r\n                      \"rgba(250, 2, 9, 0.4)\",\r\n                      \"rgba(145, 30, 180, 0.4)\",\r\n                      \"rgba(170, 255, 9, 0.4)\",\r\n\r\n                    ],\r\n                    borderColor: [\r\n                      'rgba(255, 99, 132, 1)',\r\n                      'rgba(68, 162, 23, 1)',\r\n                      'rgba(255, 206, 86, 1)',\r\n                      'rgba(75, 192, 192, 1)',\r\n                      'rgba(153, 102, 255, 1)',\r\n                      'rgba(255, 159, 64, 1)',\r\n                      \"rgba(128, 0, 0, 1)\",\r\n                      \"rgba(0, 0, 128, 1)\",\r\n                      \"rgba(170, 110, 40, 1)\",\r\n                      \"rgba(136, 128, 128, 1)\",\r\n                      \"rgba(250, 2, 9, 1)\",\r\n                      \"rgba(145, 30, 180, 1)\",\r\n                      \"rgba(70, 255, 9, 1)\",\r\n                    ],\r\n                    borderWidth: 1,\r\n                  },\r\n                ],\r\n            \r\n              }}\r\n              options= {{\r\n                responsive: true,\r\n                legend: {\r\n                    position:\"left\",\r\n                },                       \r\n                cutoutPercentag:50,\r\n\r\n            }\r\n          }\r\n            \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DoughChart\r\n","C:\\Users\\Pranav\\Desktop\\React-Portfolio\\covid19canada\\src\\Components\\Header\\Header.js",[],["71","72"],{"ruleId":"73","severity":1,"message":"74","line":3,"column":3,"nodeType":"75","messageId":"76","endLine":3,"endColumn":8},{"ruleId":"73","severity":1,"message":"77","line":6,"column":3,"nodeType":"75","messageId":"76","endLine":6,"endColumn":9},{"ruleId":"73","severity":1,"message":"78","line":7,"column":3,"nodeType":"75","messageId":"76","endLine":7,"endColumn":10},{"ruleId":"73","severity":1,"message":"79","line":11,"column":10,"nodeType":"75","messageId":"76","endLine":11,"endColumn":14},{"ruleId":"73","severity":1,"message":"80","line":12,"column":8,"nodeType":"75","messageId":"76","endLine":12,"endColumn":18},{"ruleId":"73","severity":1,"message":"81","line":36,"column":9,"nodeType":"75","messageId":"76","endLine":36,"endColumn":20},{"ruleId":"73","severity":1,"message":"82","line":43,"column":9,"nodeType":"75","messageId":"76","endLine":43,"endColumn":23},{"ruleId":"83","severity":1,"message":"84","line":86,"column":34,"nodeType":"85","messageId":"86","endLine":86,"endColumn":35},{"ruleId":"83","severity":1,"message":"84","line":86,"column":49,"nodeType":"85","messageId":"86","endLine":86,"endColumn":50},{"ruleId":"87","severity":2,"message":"88","line":86,"column":57,"nodeType":"75","messageId":"89","endLine":86,"endColumn":61},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"73","severity":1,"message":"94","line":1,"column":10,"nodeType":"75","messageId":"76","endLine":1,"endColumn":22},{"ruleId":"73","severity":1,"message":"95","line":3,"column":26,"nodeType":"75","messageId":"76","endLine":3,"endColumn":34},{"ruleId":"73","severity":1,"message":"96","line":14,"column":11,"nodeType":"75","messageId":"76","endLine":14,"endColumn":26},{"ruleId":"90","replacedBy":"97"},{"ruleId":"92","replacedBy":"98"},{"ruleId":"73","severity":1,"message":"99","line":14,"column":11,"nodeType":"75","messageId":"76","endLine":14,"endColumn":18},{"ruleId":"73","severity":1,"message":"99","line":14,"column":13,"nodeType":"75","messageId":"76","endLine":14,"endColumn":20},{"ruleId":"90","replacedBy":"100"},{"ruleId":"92","replacedBy":"101"},"no-unused-vars","'Popup' is defined but never used.","Identifier","unusedVar","'Marker' is defined but never used.","'GeoJSON' is defined but never used.","'Icon' is defined but never used.","'canadaData' is defined but never used.","'canadaStyle' is assigned a value but never used.","'onEachProvince' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-undef","'city' is not defined.","undef","no-native-reassign",["102"],"no-negated-in-lhs",["103"],"'imageOverlay' is defined but never used.","'MenuItem' is defined but never used.","'dropdownOptions' is assigned a value but never used.",["102"],["103"],"'newData' is assigned a value but never used.",["102"],["103"],"no-global-assign","no-unsafe-negation"]